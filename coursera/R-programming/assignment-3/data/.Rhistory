outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
outcome[,"pneu"]
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("BB", "heart attack")
best("BB", "hart attack")
best("MN", "hart attack")
best("MN", "heart attack")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("MN", "hart attack")
best("MN", "heart attack")
summary(outcome[, 7])
str(outcome[, 7])
as.factor(outcome[, 7])
fc <- as.factor(outcome[, 7])
fc
outcome[outcome$State == "AK"]
str(outcome)
outcome[outcome$State == "AK", ]
min(outcome[outcome$State == "AK"])
min(outcome[outcome$State == "TX",]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
na.omit(outcome)
outcome <- na.omit(outcome)
min(outcome[outcome$State == "TX",]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
mn <- min(outcome[outcome$State == "TX",]$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome[(outcome$State == "TX") & (outcome$Hospital.30.Day.Readmission.Rates.from.Heart.Attack == mn),]
res <- outcome[(outcome$State == "TX") & (outcome$Hospital.30.Day.Readmission.Rates.from.Heart.Attack == mn),]
res <- outcome[(outcome$State == "TX") & (outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == mn),]
with(outcome, Hospital.Name[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == min(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)])
with(outcome, Hospital.Name[State == "TX" & Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == min(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)])
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart attack")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart attack")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart attack")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
mn <- min(outcome[outcome$State == "MD",]$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
res <- outcome[(outcome$State == "MD") & (outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia == mn),]
View(res)
View(res)
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("MD", "pneumonia")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("MD", "pneumonia")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("MD", "pneumonia")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("MD", "pneumonia")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_data = outcome_data[outcome_data$State == "MD", ]
outcome = outcome[outcome$State == "MD", ]
min_val = min(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
min_val = min(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
min_val = max(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
min_val <- min(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia)
min_val <-min(as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia))
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("MD", "pneumonia")
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
as.numeric(10.56)
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
outcome <- read.csv("outcome-of-care-measures.csv")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "Character")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
?sapply()
?sort
sort(c("a", "x", "y", "d"))
head(sort(c("a", "x", "y", "d")), 1)
head(sort(c("a", "x", "y", "d")), 2)
head(sort(c("a", "x", "y", "d")))
head(sort(c("a", "x", "y", "d", "d", "t", "A")))
head(sort(c("a", "x", "y", "d", "d", "t", "A")), 2)
head(sort(c("a", "x", "y", "d", "d", "t", "A")), 1)
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("NY", "hert attack")
best("MD", "pneumonia")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("MD", "pneumonia")
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
testBest()
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
testBest()
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
testBest()
?min
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
rankhospital("MD", "heart attack", 50)
rankhospital("MD", "heart attack", 20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
rankhospital("MD", "heart attack", 20)
md <- outcome[outcome$State == "MD"]
md <- outcome[outcome$State == "MD", ]
View(md)
md_srt <- md[order(-md$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, md$Hospital.Name)]
md_srt <- md[order(-md$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, md$Hospital.Name), ]
md_srt <- md[order(-md$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, md$Hospital.Name), ]
md_srt <- md[with(md, order(-Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, Hospital.Name)), ]
md[with(md, order(-Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, Hospital.Name)), ]
dd <- data.frame(b = factor(c("Hi", "Med", "Hi", "Low"),
levels = c("Low", "Med", "Hi"), ordered = TRUE),
x = c("A", "D", "A", "C"), y = c(8, 3, 9, 9),
z = c(1, 1, 1, 2))
dd[with(dd, order(-z, b)), ]
md[with(dd, order(-"Hospital.Name")), ]
md[with(dd, order(-Hospital.Name)), ]
md[order(-md[,1]), ]
sort(md$Hospital.Name )
sort(md$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure)
outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack <-
as.numeric(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome <-
outcome[!is.na(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), ]
View(md)
sort(md$Hospital.30.Day.Readmission.Rates.from.Heart.Attack)
sort(outcome$Hospital.30.Day.Readmission.Rates.from.Heart.Attack)
md_srtsort(outcome$Hospital.30.Day.Readmission.Rates.from.Heart.Attack)
md_srt <- sort(outcome$Hospital.30.Day.Readmission.Rates.from.Heart.Attack)
md_srt
str(md)
md[with(md, order(-"Hospital.Name", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))]
?order
md["Hospital.Name", ]
md[,"Hospital.Name" ]
order(md)
order(md$Hospital.Name)
md[order(md$Hospital.Name),]
ax<-md[order(md$Hospital.Name),]
View(ax)
ax<-md[order(md$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
outcome <-
read.csv("outcome-of-care-measures.csv", colClasses = "character")
tx <- outcome[outcome$State == "TX", ]
View(tx)
ax<-tx[order(tx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),]
View(ax)
ax<-tx[order(tx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure),]
View(ax)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
tx <- rankhospital("TX", "heart failure", 370)
tx <- rankhospital("TX", "heart failure", 10)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
tx <- rankhospital("TX", "heart failure", 10)
View(tx)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
View(tx)
tx <- rankhospital("TX", "heart failure", 10)
View(tx)
View(tx)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
tx <- rankhospital("TX", "heart failure", 10)
View(tx)
View(tx)
tx$Rank <- seq.int(nrow((tx)))
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
tx <- rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
md <-rankhospital("MD", "heart attack", "worst")
View(md)
md <-rankhospital("MD", "heart attack", "best")
md <-rankhospital("MD", "heart attack", "worst")
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
md <-rankhospital("MD", "heart attack", "worst")
View(md)
mdx <-rankhospital("MD", "heart attack", "worst")
View(mdx)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
mdx <-rankhospital("MD", "heart attack", "worst")
View(mdx)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
mdx <-rankhospital("MD", "heart attack", "worst")
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
mdx <-rankhospital("MD", "heart attack", "worst")
View(mdx)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
mdx <-rankhospital("MD", "heart attack", "worst")
View(mdx)
aaa <- rankhospital("TX", "heart failure", 4)
View(aaa)
rankhospital("MN", "heart attack", 5000)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
rankhospital("AK", "heart attack", 20)
test <- rankhospital("AK", "heart attack", 20)
View(test)
test <- rankhospital("AL", "heart attack", 20)
test <- rankhospital("AR", "heart attack", 20)
source('~/DataScience/R/tmp.R')
View(dt)
source('~/DataScience/R/tmp.R')
source('~/DataScience/R/tmp.R')
View(dt)
View(dt)
source('~/DataScience/R/tmp.R')
View(dt)
source('~/DataScience/R/tmp.R')
source('~/DataScience/R/tmp.R')
source('~/DataScience/R/tmp.R')
View(dt)
source('~/DataScience/R/tmp.R')
dt
source('~/DataScience/R/tmp.R')
dt[order(dt$id),-4]
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
View(ranktest)
ranktest[ranktest$Rank == 20, ]
ranktest <- ranktest[ranktest$Rank == 20, ]
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
ranktest <- ranktest[ranktest$Rank == 20, ]
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
View(ranktest)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
?rank
ranktest <- rankall("heart attack", 20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
ranktestca <- ranktest[ranktest$State == "CA", ]
View(ranktestca)
ranktestco <- ranktest[ranktest$State == "CO", ]
View(ranktestco)
ranktest20 <- ranktest[ranktest$Rank == 20, ]
View(ranktest20)
ranktestct <- ranktest[ranktest$State == "CT", ]
View(ranktestct)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
ranktestct <- ranktest[ranktest$State == "CT", ]
ranktest20 <- ranktest[ranktest$Rank == 20, ]
View(ranktest20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
ranktest20 <- ranktest[ranktest$Rank == 20, ]
ranktestct <- ranktest[ranktest$State == "CT", ]
View(ranktestct)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
ranktestct <- ranktest[ranktest$State == "CT", ]
View(ranktestct)
ranktest20 <- ranktest[ranktest$Rank == 20, ]
View(ranktest20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
ranktest20 <- ranktest[ranktest$Rank == 20, ]
View(ranktest20)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
ranktest <- rankall("heart attack", 20)
ranktest20 <- ranktest[ranktest$Rank == 20, ]
st<-unique(ranktest20[ranktest20$State])
st<-unique(ranktest20[ranktest20$State,])
st
st<-unique(ranktest20$State)
st
df <- data.frame(hospital, unique(ranktest20$State))
df <- data.frame(hospital = character(), unique(ranktest20$State))
df <- data.frame(hospital = "", unique(ranktest20$State))
View(df)
min(outcome_data$Rank)
min(ranktest$Rank)
max(ranktest$Rank)
ranktest <- rankall("pnuemonia", 20)
ranktest <- rankall("pneumonia", 20)
ranktestworst <- ranktest[ranktest$Rank == max(ranktest$Rank), ]
View(ranktestworst)
max(ranktest$Rank)
View(ranktest)
ranktest <- rankall("heart attack", 20)
result <- data.frame(hospital = "", state = unique(ranktest20$State))
ranktest <- ranktest[outcome_data$Rank == 20, ]
ranktest <- ranktest[ranktest$Rank == 20, ]
outcome <-
read.csv("outcome-of-care-measures.csv", colClasses = "character")
result <- data.frame(hospital = NA, state = unique(outcome$State))
View(result)
result$hospital <- ranktest[ranktest$Hospital.Name == result$hospital, ]
result$hospital[ranktest$Hospital.Name == result$hospital] <- ranktest[ranktest$Hospital.Name]
result$hospital[ranktest$Hospital.Name == result$hospital] <- ranktest[ranktest$Hospital.Name,]
View(result)
View(result)
result <- data.frame(hospital = NA, state = unique(outcome$State))
View(result)
mergeresult <- merge(result, ranktest, by.x = "state", by.y = "State", all.x = TRUE, all.y = FALSE)
View(mergeresult)
mergeresult$hospital < mergeresult$Hospital.Name
mergeresult$hospital <- mergeresult$Hospital.Name
mergeresult <- cbind(result, ranktest[ranktest$State %in% result$state])
mergeresult <- merge(result, ranktest, by.x = "state", by.y = "State")
mergeresult <- merge(result, ranktest, by.x = "state", by.y = "State", all.x = TRUE, all.y = TRUE)
mergeresult$hospital <- mergeresult$Hospital.Name
mergeresult <- mergeresult[,c(1,2)]
View(mergeresult)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
head(rankall("heart attack", 20), 10)
finalresult <- head(rankall("heart attack", 20), 10)
View(finalresult)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
finalresult <- head(rankall("heart attack", 20), 10)
View(finalresult)
tail(rankall("pneumonia", "worst"), 3)
?tapply
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
rankall("pneumonia", "worst")
finalresult <- rankall("pneumonia", "worst")
View(finalresult)
result <- with(finalresult, tapply(Rank, State, function(x) max(x)))
result
str(result)
str(result$)
str(result$AK)
str(result[1])
result[1]
attributes(result)
attributes(result)$dim
attributes(result)$dimnames
attributes(result)$dimnames["AK"]
attributes(result)$dimnames[["AK"]
]
attributes(result)$dimnames[["AK"]]
attributes(result)$[["AK"]]
attributes(result)[["AK"]]
attributes(result)["AK"]
result[AK]
result["AK"]
result2 <- finalresult[finalresult$Rank == result[finalresult$State]]
result2 <- finalresult[finalresult$Rank == result[finalresult$State],]
View(result2)
source('~/DataScience/R/ProgrammingAssignment3/data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('~/DataScience/R/ProgrammingAssignment3/data/best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
result <- rankhospital("NC", "heart attack", "worst")
View(result)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
result <- rankhospital("NC", "heart attack", "worst")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "heart failure", 4)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/DataScience/R/ProgrammingAssignment3/data/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
ls()
rm(list = ls())
fl -> download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
fl <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
setwd("~/DataScience/R/data-cleaning/quiz1")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "datafile.csv")
setwd("~/DataScience/R/data-cleaning/quiz1")
fl <- read.csv("datafile.csv")
View(fl)
fl[fl$VAL == 24, ]
count(fl[fl$VAL == 24, ])
length(fl[fl$VAL == 24, ])
nrows(fl[fl$VAL == 24, ])
nrow(fl[fl$VAL == 24, ])
nrow(fl[fl$VAL == 24, "VAL"])
v<-nrow(fl[fl$VAL == 24, ])
v<-fl[fl$VAL == 24, ]
v<-fl[!is.na(fl$VAL) & (fl$VAL == 24) , ]
View(v)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "NGAP.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "NGAP.xlsx", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "NGAP.xlsx")
library(xlsx)
require(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
dat<-read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
fileurl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
install.packages("XML")
library(XML)
doc<-xmlTreeParse(fileurl)
doc<-xmlTreeParse(fileurl, useInternalNodes = T)
doc<-xmlTreeParse(fileurl, useInternalNodes = F)
fileurl
download.file(fileurl)
download.file(fileurl, destfile = "restaurant.xml")
doc<-xmlTreeParse("restaurant.xml")
doc
rootnode < xmlRoot(doc)
rootnode <- xmlRoot(doc)
rootnode
xpathSApply(rootnode, "//zipcode", xmlValue)
xpathSApply(rootnode, "/response//row[zipcode=21231]", xmlValue)
xpathSApply(rootnode, "/response/row", xmlValue)
xpathSApply(rootnode, "/response", xmlValue)
xpathSApply(rootnode, "//response", xmlValue)
xpathSApply(rootnode, "/row", xmlValue)
xpathSApply(rootnode, "/row[zipcode=21231]", xmlValue)
x <- xpathSApply(rootnode, "/row[zipcode=21231]", xmlValue)
x
x <- xpathSApply(rootnode, "/row/row", xmlValue)
x
x <- xpathSApply(rootnode, "//row/row", xmlValue)
x <- xpathSApply(rootnode, "//row", xmlValue)
x <- xpathSApply(rootnode, "/row", xmlValue)
doc <- xmlInternalTreeParse("restaurant.xml")
rootnode <- xmlRoot(doc)
rootnode
x <- xpathSApply(rootnode, "/row", xmlValue)
x
x <- xpathSApply(rootnode, "//zipcode", xmlValue)
x <- xpathSApply(rootnode, "//zipcode=21231", xmlValue)
x <- xpathSApply(rootnode, "//[zipcode=21231]", xmlValue)
x <- xpathSApply(rootnode, "//row[zipcode=21231]", xmlValue)
x
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "housing.csv")
install.packages("data.table")
library(data.table)
fread("housing.csv")
DT <- fread("housing.csv")
DT$pwgtp15
system.time()
system.time()
?system.time()
system.time(DT[,mean(pwgtp15),by=SEX])
DT[,mean(pwgtp15),by=SEX]
system.time()
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({DT[,mean(pwgtp15),by=SEX]})
system.time({sapply(split(DT$pwgtp15,DT$SEX),mean)})
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({tapply(DT$pwgtp15,DT$SEX,mean)})
system.time({mean(DT$pwgtp15,by=DT$SEX)})
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
